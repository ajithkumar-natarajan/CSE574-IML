# -*- coding: utf-8 -*-
"""CSE574-Project2-task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWv-MdC57uI6uhwzJ-xjPlDzMEWqrXIf
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import keras
import matplotlib.pyplot as plot
import tensorflow as tf
from sklearn.metrics import classification_report, confusion_matrix


def load_mnist(path, kind='train'):
	import os
	import gzip

	"""Load MNIST data from `path`"""
	labels_path = os.path.join(path,
                               '%s-labels-idx1-ubyte.gz'
#                                % kind)
	images_path = os.path.join(path,
                               '%s-images-idx3-ubyte.gz'
#                                % kind)
	with gzip.open(labels_path, 'rb') as lbpath:
		labels = np.frombuffer(lbpath.read(), dtype=np.uint8,
                               offset=8)

	with gzip.open(images_path, 'rb') as imgpath:
		images = np.frombuffer(imgpath.read(), dtype=np.uint8,
                               offset=16).reshape(len(labels), 784)

	return images, labels


# (x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()

x_train, y_train = load_mnist('data/fashion', kind='train')
x_test, y_test = load_mnist('data/fashion', kind='t10k')


x_train = x_train.reshape(x_train.shape[0], 28, 28, 1)
x_test = x_test.reshape(x_test.shape[0], 28, 28, 1)
y_train = tf.keras.utils.to_categorical(y_train, 10)
y_test_orig = y_test
y_test = tf.keras.utils.to_categorical(y_test, 10)


model = keras.Sequential([keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape = (28, 28, 1)), 
                          keras.layers.pooling.MaxPooling2D(pool_size = (2, 2)), 
                          keras.layers.Conv2D(64, (3, 3), activation='relu'), 
                          keras.layers.pooling.MaxPool2D(pool_size = (2, 2)), 
                          keras.layers.Dropout(0.25), 
                          keras.layers.Flatten(), 
                          keras.layers.Dense(256, activation='relu'), 
                          keras.layers.Dropout(0.5), 
                          keras.layers.Dense(10, activation='softmax')])
model.summary()

model.compile(optimizer='sgd', loss='categorical_crossentropy', metrics=['accuracy'])

model.fit(x_train, y_train, epochs=50, batch_size=128, validation_data=(x_test, y_test))

output = model.predict_classes(x_test)
confusion_matrix = confusion_matrix(y_test_orig, output)

print(confusion_matrix)

!unzip data_with_notebook.zip
!rm -r scripts/